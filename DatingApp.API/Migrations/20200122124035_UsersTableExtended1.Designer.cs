// <auto-generated />
using System;
using DatingApp.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DatingApp.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200122124035_UsersTableExtended1")]
    partial class UsersTableExtended1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("DatingApp.API.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateAdded");

                    b.Property<string>("Description");

                    b.Property<bool>("IsMain");

                    b.Property<string>("Url");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Photos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "https://randomuser.me/",
                            IsMain = true,
                            Url = "https://randomuser.me/api/portraits/men/75.jpg",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("DatingApp.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Country");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Gender");

                    b.Property<string>("Interrests");

                    b.Property<string>("Introduction");

                    b.Property<string>("KnownAs");

                    b.Property<DateTime>("LastActive");

                    b.Property<string>("LookingFor");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("UserName");

                    b.Property<string>("city");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "Sri Lanka",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Male",
                            Interrests = "Codeing",
                            Introduction = "Anything is Possible and Nothing is Impossible",
                            KnownAs = "active",
                            LastActive = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LookingFor = "Don't reinvent the wheel,unless you plan on learning more about wheels",
                            PasswordHash = new byte[] { 190, 50, 197, 215, 242, 161, 41, 145, 234, 222, 19, 229, 166, 232, 121, 64, 205, 132, 168, 44, 17, 51, 46, 58, 154, 64, 56, 51, 8, 107, 41, 15, 174, 179, 63, 134, 71, 97, 150, 34, 154, 218, 79, 156, 145, 91, 197, 16, 60, 81, 142, 172, 121, 11, 61, 125, 253, 86, 197, 195, 63, 30, 129, 122 },
                            PasswordSalt = new byte[] { 127, 46, 60, 143, 94, 156, 214, 151, 72, 21, 158, 141, 123, 43, 91, 224, 0, 116, 45, 242, 159, 244, 93, 248, 56, 14, 139, 180, 101, 76, 54, 150, 32, 169, 124, 16, 147, 237, 231, 148, 129, 46, 202, 43, 255, 69, 155, 248, 40, 131, 29, 205, 87, 238, 12, 128, 44, 253, 20, 133, 240, 208, 19, 222, 148, 164, 45, 212, 89, 218, 37, 112, 64, 240, 174, 195, 132, 221, 23, 150, 98, 87, 196, 121, 192, 87, 213, 123, 131, 180, 69, 92, 85, 58, 9, 175, 47, 176, 15, 86, 106, 167, 206, 33, 49, 97, 15, 31, 76, 119, 217, 216, 71, 120, 53, 209, 173, 148, 167, 107, 240, 178, 232, 213, 179, 125, 236, 227 },
                            UserName = "kokila.sanjeewa@gmail.com",
                            city = "Colombo"
                        });
                });

            modelBuilder.Entity("DatingApp.API.Models.Value", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("DatingApp.API.Models.Photo", b =>
                {
                    b.HasOne("DatingApp.API.Models.User", "User")
                        .WithMany("Photos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
